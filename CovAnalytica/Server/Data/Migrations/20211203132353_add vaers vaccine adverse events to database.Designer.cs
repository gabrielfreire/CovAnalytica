// <auto-generated />
using System;
using CovAnalytica.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CovAnalytica.Server.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211203132353_add vaers vaccine adverse events to database")]
    partial class addvaersvaccineadverseeventstodatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("CovAnalytica.Shared.Models.CompleteCovidData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Aged65Older")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Aged70Older")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CardiovascularDeathRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiabetesPrevalence")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExcessMortality")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExcessMortalityCumulative")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExcessMortalityCumulativeAbsolute")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExcessMortalityCumulativePerMillion")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ExtremePoverty")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("FemaleSmokers")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("GdpPerCapita")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("HandWashingFacilities")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("HospitalBedsPerThousand")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("HospitalPatients")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("HospitalPatientsPerMillion")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("HumanDevelopmentIndex")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("IcuPatients")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("IcuPatientsPerMillion")
                        .HasColumnType("TEXT");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("LifeExpectancy")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MaleSmokers")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MedianAge")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("NewCases")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("NewCasesPerMillion")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("NewDeaths")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("NewDeathsPerMillion")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("NewTests")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("NewTestsPerThousand")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("NewVaccinations")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PeopleFullyVaccinated")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PeopleFullyVaccinatedPerHundred")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PeopleVaccinated")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PeopleVaccinatedPerHundred")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Population")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PopulationDensity")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PositiveRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ReproductionRate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("StringencyIndex")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TestsPercase")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TestsUnits")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalBoosters")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalBoostersPerHundred")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalCases")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalCasesPerMillion")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalDeaths")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalDeathsPerMillion")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalTests")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalTestsPerThousand")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalVaccinations")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalVaccinationsPerHundred")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("WeeklyHospitalAdmissions")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("WeeklyHospitalAdmissionsPerMillion")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("WeeklyIcuAdmissions")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("WeeklyIcuAdmissionsPerMillion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CompleteCovidDataItems");
                });

            modelBuilder.Entity("CovAnalytica.Shared.Models.SelectionCovidData", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Aged65Older")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Aged70Older")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CardiovascularDeathRate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Continent")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("DiabetesPrevalence")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("FemaleSmokers")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("IcuPatients")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("IcuPatientsPerMillion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MaleSmokers")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("MedianAge")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PeopleFullyVaccinated")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PeopleFullyVaccinatedPerHundred")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PeopleVaccinated")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PeopleVaccinatedPerHundred")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Population")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalBoosters")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalBoostersPerHundred")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalCases")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalCasesPerMillion")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalDeaths")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("TotalDeathsPerMillion")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("SelectionCovidDataItems");
                });

            modelBuilder.Entity("CovAnalytica.Shared.Models.UpdateMetadata", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("UpdateMetadataItems");
                });

            modelBuilder.Entity("CovAnalytica.Shared.Models.VaersVaxAdverseEvent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Age")
                        .HasColumnType("TEXT");

                    b.Property<string>("AgeCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventCategory")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventCategoryCode")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("EventsReported")
                        .HasColumnType("TEXT");

                    b.Property<string>("Percent")
                        .HasColumnType("TEXT");

                    b.Property<string>("VaccineDose")
                        .HasColumnType("TEXT");

                    b.Property<string>("VaccineDoseCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("VaccineManufacturer")
                        .HasColumnType("TEXT");

                    b.Property<string>("VaccineManufacturerCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("VaccineType")
                        .HasColumnType("TEXT");

                    b.Property<string>("VaccineTypeCode")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("VaersVaxAdverseEventItems");
                });
#pragma warning restore 612, 618
        }
    }
}
